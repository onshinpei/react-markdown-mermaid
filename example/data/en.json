{
  "appTitle": "react-markdown-mermaid Demo",
  "appSubtitle": "A lightweight component and rehype plugin to render Mermaid diagrams in React",
  "tabs": {
    "markdown": "React-Markdown Example"
  },
  "labels": {
    "viewMermaidCode": "View Mermaid Code",
    "useMermaidBlock": "Use MermaidBlock directly",
    "github": "GitHub",
    "mermaidDocs": "Mermaid Docs",
    "markdownExampleTitle": "React-Markdown + rehypeMermaid Example",
    "markdownExampleDescription": "This example demonstrates how to use the rehypeMermaid plugin in react-markdown to render Mermaid diagrams.",
    "codeExample": "Code Example",
    "renderEffect": "Render Effect",
    "mermaidCode": "Mermaid Code",
    "reactUsageCode": "React Usage Code"
  },
  "examples": {
    "flowchart": {
      "title": "Flowchart",
      "description": "Basic flowchart with conditional branching and multiple steps.",
      "code": "\n    graph TD\n      A[Start] --> B{Condition?}\n      B -->|Yes| C[Handle A]\n      B -->|No| D[Handle B]\n      C --> E[End]\n      D --> E\n  "
    },
    "sequence": {
      "title": "Sequence Diagram",
      "description": "Login interaction between multiple participants.",
      "code": "\n    sequenceDiagram\n      participant User\n      participant System\n      participant DB\n      User->>System: Login request\n      System->>DB: Verify user\n      DB-->>System: Result\n      System-->>User: Response\n  "
    },
    "gantt": {
      "title": "Gantt Chart",
      "description": "Project timeline across phases and progress.",
      "code": "\n    gantt\n      title Project Plan\n      dateFormat  YYYY-MM-DD\n      section Design\n      Requirements   :done, des1, 2024-01-01, 2024-01-10\n      System Design  :active, des2, 2024-01-11, 2024-01-25\n      section Dev\n      Implementation  :des3, 2024-01-26, 2024-02-15\n      Testing & Fixes :des4, 2024-02-16, 2024-02-28\n  "
    },
    "class": {
      "title": "Class Diagram",
      "description": "OOP class structure with inheritance.",
      "code": "\n    classDiagram\n      class Animal {\n        +String name\n        +int age\n        +makeSound()\n      }\n      class Dog {\n        +bark()\n      }\n      class Cat {\n        +meow()\n      }\n      Animal <|-- Dog\n      Animal <|-- Cat\n  "
    },
    "pie": {
      "title": "Pie Chart",
      "description": "Data distribution by percentage.",
      "code": "\n    pie title Browser market share\n      \"Chrome\" : 65.5\n      \"Firefox\" : 15.2\n      \"Safari\" : 12.3\n      \"Edge\" : 7.0\n  "
    },
    "state": {
      "title": "State Diagram",
      "description": "System state transitions with triggers.",
      "code": "\n    stateDiagram-v2\n      [*] --> Idle\n      Idle --> Running : Start\n      Running --> Paused : Pause\n      Paused --> Running : Resume\n      Running --> Idle : Stop\n      Paused --> Idle : Stop\n  "
    }
  },
  "markdownExample": {
    "title": "React Mermaid + React-Markdown Example",
    "description": "This is a complete example using react-markdown and rehypeMermaid plugin.",
    "sections": {
      "flowchart": {
        "title": "Flowchart Example",
        "code": "graph TD\n    A[Start] --> B{Condition?}\n    B -->|Yes| C[Handle A]\n    B -->|No| D[Handle B]\n    C --> E[End]\n    D --> E"
      },
      "sequence": {
        "title": "Sequence Diagram Example",
        "code": "sequenceDiagram\n    participant User\n    participant System\n    participant Database\n    \n    User->>System: Login request\n    System->>Database: Verify user\n    Database-->>System: Return result\n    System-->>User: Login response"
      },
      "gantt": {
        "title": "Gantt Chart Example",
        "code": "gantt\n    title Project Plan\n    dateFormat  YYYY-MM-DD\n    section Design\n    Requirements   :done, des1, 2024-01-01, 2024-01-10\n    System Design  :active, des2, 2024-01-11, 2024-01-25\n    section Development\n    Implementation  :des3, 2024-01-26, 2024-02-15\n    Testing & Debug :des4, 2024-02-16, 2024-02-28"
      },
      "class": {
        "title": "Class Diagram Example",
        "code": "classDiagram\n    class Animal {\n        +String name\n        +int age\n        +makeSound()\n    }\n    class Dog {\n        +bark()\n    }\n    class Cat {\n        +meow()\n    }\n    Animal <|-- Dog\n    Animal <|-- Cat"
      },
      "pie": {
        "title": "Pie Chart Example",
        "code": "pie title Browser market share\n    \"Chrome\" : 65.5\n    \"Firefox\" : 15.2\n    \"Safari\" : 12.3\n    \"Edge\" : 7.0"
      },
      "state": {
        "title": "State Diagram Example",
        "code": "stateDiagram-v2\n    [*] --> Idle\n    Idle --> Running : Start\n    Running --> Paused : Pause\n    Paused --> Running : Resume\n    Running --> Idle : Stop\n    Paused --> Idle : Stop"
      },
      "code": {
        "title": "Code Example",
        "description": "Here is a regular code block:",
        "code": "function hello() {\n  console.log('Hello, World!');\n}"
      },
      "list": {
        "title": "List Example",
        "items": ["Item 1", "Item 2", "Sub-item 2.1", "Sub-item 2.2", "Item 3"]
      },
      "table": {
        "title": "Table Example",
        "headers": ["Feature", "Status", "Description"],
        "rows": [
          ["Flowchart", "✅", "Supported"],
          ["Sequence Diagram", "✅", "Supported"],
          ["Gantt Chart", "✅", "Supported"],
          ["Class Diagram", "✅", "Supported"],
          ["Pie Chart", "✅", "Supported"],
          ["State Diagram", "✅", "Supported"]
        ]
      },
      "summary": {
        "title": "Summary",
        "content": "This example demonstrates how to use the rehypeMermaid plugin in react-markdown to render Mermaid diagrams. The plugin automatically recognizes ```mermaid code blocks in markdown and converts them to MermaidBlock components."
      }
    }
  }
}
